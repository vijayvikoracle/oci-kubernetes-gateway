# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v1.0 as shown at https://oss.oracle.com/licenses/upl.
global:
  # -- Kubernetes Namespace in which the resources to be created. Set oci-kubernetes-monitoring-common:createNamespace set to true, if the namespace doesn't exist.
  namespace: oci-onm
  # -- Prefix to be attached to resources created through this chart. Not all resources may have this prefix.
  resourceNamePrefix: oci-onm
  # -- OKE OCID for an OKE cluster or an unique ID for other Kubernetes clusters.
  kubernetesClusterID:
  # -- Provide a unique name for the cluster. This would help uniquely identifying the logs and metrics data at OCI Logging Analytics and OCI Monitoring respectivelt, when moitoring multiple clustersa
  kubernetesClusterName: k8s_test_19apr

oci-onm-common:
  # -- By default, a cluster role, cluster role binding and serviceaccount will be created for the monitoring pods to be able to (readonly) access various objects within the cluster, to support collection of various telemetry data. You may set this to false and provide your own serviceaccount (in the parent chart(s)) which has the necessary cluster role(s) binded to it. Refer, README for the cluster role definition and other details.
  createServiceAccount: true
  # -- If createNamespace is set to true, it tries to create the namespace defined in 'namespace' variable.
  createNamespace: true
  # -- Kubernetes Namespace in which the serviceaccount to be created.
  namespace: "{{ .Values.global.namespace }}"
  # -- Prefix to be attached to resources created through this chart. Not all resources may have this prefix.
  resourceNamePrefix: "{{ .Values.global.resourceNamePrefix }}"
  # -- Name of the Kubernetes ServiceAccount
  serviceAccount: "{{ .Values.global.resourceNamePrefix }}"

mgmtgateway:
   # Provide either installKeyFileContent or installKey as an install key. If both provided then installKeyFileContent will take higher precedence.
   # -- Provide the base64 encoded content of the Management Agent Install Key file (e.g. cat input.rsp | base64 -w 0)
  installKeyFileContent: bWFuYWdlbWVudEFnZW50SW5zdGFsbEtleT1NaTR3TEhWekxXRnphR0oxY200dE1TeHZZMmxrTVM1MFpXNWhibU41TG05ak1TNHVZV0ZoWVdGaFlXRTFOV051TTNsdE5HNTBlbk0wYldrek4yVjFaVFZ1WW5vM2FHSjVaWFZ5ZW5CMmJEVTNlbXAzZVdWd2JuSmhORGRrTTNCeExHOWphV1F4TG0xaGJtRm5aVzFsYm5SaFoyVnVkR2x1YzNSaGJHeHJaWGt1YjJNeExtbGhaQzVoYldGaFlXRmhZWHB6TkRSMGVYbGhjR2xvYm5WMVkyNTJhVE0xTm01c1p6TnBiM0Z1YTNoM2R6TnBhWGcyYmpKck1uUnViRE0zTjJscWNXRXNTVlpUUkUxNlRVVkxaRlpuWDBVMmVuSlZlREJhT1VoNmEyMUxPVUZSYmtOd1dqRkdVVmRHYWc9PQpHYXRld2F5Q2VydENvbW1vbk5hbWU9Ki5sYnN1YmUzNzkzODdmNi5tYW5hZ2VtZW50Z2F0ZXcub3JhY2xldmNuLmNvbQo=
  # -- Copy the downloaded Management Agent Install Key file under root helm directory as resources/input.rsp
  installKey: resources/input.rsp
  # Follow steps documented at https://github.com/oracle/docker-images/tree/main/OracleManagementAgent to build docker image.
  image:
    # -- Replace this value with actual docker image URL for Management Agent
    url: iad.ocir.io/paasomcqa/mgmtgateway-container:1.0.318
    # -- Image secrets to use for pulling container image (base64 encoded content of ~/.docker/config.json file)
    secret: ewogICAgICAgICJhdXRocyI6IHsKICAgICAgICAgICAgICAgICJpYWQub2Npci5pbyI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImF1dGgiOiAiY0dGaGMyOXRZM0ZoTDA5eVlXTnNaVWxrWlc1MGFYUjVRMnh2ZFdSVFpYSjJhV05sTDNacGFtRjVMbkV1YTNWdFlYSkFiM0poWTJ4bExtTnZiVHA5UlV0TU16ZHdOSFJ5VG5sb2MxMUhXa1ZIUkE9PSIKICAgICAgICAgICAgICAgIH0KICAgICAgICB9Cn0K
  service:
     type: LoadBalancer
     port: 4480
  externalPort: 4480
  internalPort: 4480
# -- Kubernetes namespace to create and install this helm chart in
namespace: "{{ .Values.global.namespace }}"

# -- Name of the Kubernetes ServiceAccount
serviceAccount: "{{ .Values.global.resourceNamePrefix }}"


# Kubernetes Cluster details to monitor
kubernetesCluster:
   # -- OCI Compartment Id to push Kubernetes Monitoring metrics. If not specified default is same as Agent compartment
   compartmentId:
   # -- Kubernetes cluster name
   name:
   # -- Kubernetes cluster namespace(s) to monitor. This can be a comma-separated list of namespaces or '*' to monitor all the namespaces
   namespace: '*'
   # -- OCI namespace to push Kubernetes Monitoring metrics. The namespace should match the pattern '^[a-z][a-z0-9_]*[a-z0-9]$'. By default metrics will be pushed to 'mgmtagent_kubernetes_metrics'
   monitoringNamespace:
   # -- Provide the specific list of comma separated metric names for API server (/metrics) metrics to be collected.
   overrideAllowMetricsAPIServer:
   # -- Provide the specific list of comma separated metric names for agent computed metrics to be collected.
   overrideAllowMetricsCluster:
   # -- Provide the specific list of comma separated metric names for Kubelet (/api/v1/nodes/<node_name>/proxy/metrics) metrics to be collected.
   overrideAllowMetricsKubelet:
   # -- Provide the specific list of comma separated metric names for Node (/api/v1/nodes/<node_name>/proxy/metrics/resource, /api/v1/nodes/<node_name>/proxy/metrics/cadvisor) metrics to be collected.
   overrideAllowMetricsNode:

deployment:
   security:
      # Processes in the Container will run as user ID 1000, replace it with a different value if desired
      runAsUser: 0
      # Processes in the Container will use group ID 2000, replace it with a different value if desired
      runAsGroup: 0
      # Files created in the Container will use group ID 2000, replace it with a different value if desired
      fsGroup: 0

   # Please provide the current epoch time in seconds (Eg: Executing the following command in a bash shell will provide the epoch time: "date +%s") to clean up the agent installation directory from previous deployment
   cleanupEpochTime:

   replicaSet:
      hostPath: /opt/oracle

   # Provide the agent resources as per Kubernetes resource quantity
   resource:
      # Provide the minimum required resources
      request:
         # specify the cpu cores
         cpuCore: 200m
         # specify the memory
         memory: 500Mi
         # specify the storage capacity for StatefulSet's PVC
         storage: 2Gi
      # Provide the maximum limit for resources
      limit:
         # specify the cpu cores
         cpuCore: 500m
         # specify the memory
         memory: 1Gi
   storageClass:
